class Solution:
#     ##method 1 -> Time Limit Exceeded
#     def definePrime(self,num):
#         count_y=0
#         for i in range(1,num+1):
#             if num%i==0:
#                 count_y+=1
#             else:
#                 continue
#         if count_y==2:
#             return True
#         else:
#             return False
        
#     def countPrimes(self, n: int) -> int:
#         count=0
#         for i in range(2, n):
#             if i>10 and i%10 not in [1,3,7,9]:
#                 continue
#             else:
#                 if self.definePrime(i):
#                     count+=1
                    
#         return count
    
    ## method 2 Prime filter 素数筛选法（埃拉托斯特尼筛法）
    ## Principle: Firstly use the smallest prime number i to filter these number which samller than pow(n,0.5) and is multiple of i,then use secondsmallest number to filter.
    def countPrimes(self, n: int) -> int:
        if n<=2:
            return 0
        prime_list=[1 for i in range(n)]
        prime_list[0]=prime_list[1]=0
        for i in range(2,int(pow(n,0.5))+1):
            if prime_list[i]==1:
                for j in range(2*i,n,i):
                    prime_list[j]=0
        return sum(prime_list)
            
        
                
            
            
